version: '3.8'

services:
  app:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./.env:/app/.env
    environment:
      - TZ=Asia/Tokyo
      - DB_URL=sqlite:///./data/scraps.db
      - TIMEOUT_SEC=30
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # LM Studio service (external)
  # Note: This requires LM Studio to be running on the host
  # Alternatively, you can use Ollama:
  
  # ollama:
  #   image: ollama/ollama:latest
  #   ports:
  #     - "11434:11434"
  #   volumes:
  #     - ollama_data:/root/.ollama
  #   restart: unless-stopped

  # Postprocess worker: DB-backed postprocess_queue polling worker
  # Runs `postprocess_queue.run_worker` via module invocation
  worker:
    build: .
    command: ["python", "-m", "app.services.postprocess_queue"]
    volumes:
      - ./data:/app/data
      - ./.env:/app/.env
    environment:
      - TZ=Asia/Tokyo
      - DB_URL=sqlite:///./data/scraps.db
      - TIMEOUT_SEC=180
    restart: unless-stopped

  # Preference worker: processes preference_jobs queue for personalized ranking
  preference-worker:
    build: .
    command: ["python", "scripts/run_preference_worker.py", "--interval", "2.0"]
    volumes:
      - ./data:/app/data
      - ./.env:/app/.env
    environment:
      - TZ=Asia/Tokyo
      - DB_URL=sqlite:///./data/scraps.db
      - TIMEOUT_SEC=180
      - PYTHONPATH=/app
    depends_on:
      - app
    restart: unless-stopped
